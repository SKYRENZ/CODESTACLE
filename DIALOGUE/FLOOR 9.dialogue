~ Runistart
Runistart: "Welcome back, B-01! We've conquered var and let, and now it's time to meet the immovable object of JavaScript: const! Prepare to learn about constants!"

=> END
~ signage1
"The const keyword is used to declare constants-variables whose values cannot be reassigned after they are set. This makes your code safer and easier to understand, especially for values that should never change, like mathematical constants or configuration settings."
=> END

~ signage2
"Like let, const is block-scoped. This means a const variable is only accessible within the block, statement, or expression where it is defined. Attempting to access it outside that block will result in an error."
=> END

~ signage3
"You must assign a value to a const variable at the moment you declare it. Declaring a const without an initial value will cause a SyntaxError."
=> END

~ signage4
"Attempting to reassign a const variable will result in a TypeError. Once a value is assigned, it cannot be changed or reassigned to a new value."
=> END

~ signage5
"If a const variable holds an object or array, you can still modify the contents (such as properties or elements), but you cannot reassign the variable to a new object or array. The binding is immutable, not the value itself."
=> END

~ signage6
"Best practice: Use const by default for variables that should never change. This helps prevent accidental changes and makes your code more predictable. Use let only when you know the value will change."
=> END

~ Runiquiz
Runiquiz: "Great job reaching the end of this floor, B-01! Let's test your understanding of const with a quiz!"

=> END

~ Runiend
Runiend: "Fantastic, B-01! You now understand the power of constants using const. Keep up the great work on your coding adventure!"
=> END